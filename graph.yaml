relation_types:
  - depends # depends on an external thing - essentially going "sideways"
  - parents # depends on a parent - going upwards in the skill tree
  - module # this is a module that consists of many parts - dependencies going downwards in the skill tree
  - select_any # this is a module that can be fulfilled by fulfiling any single one of its parts
Sorting:
  link: https://en.wikipedia.org/wiki/Sorting_algorithm
  depends:
    - Array
Sorting implementation:
  tags: [sorting, implementation]
  select_any:
    - Mergesort implementation
    - Heapsort implementation
Mergesort:
  link: https://en.wikipedia.org/wiki/Merge_sort
  depends:
    - Sorting
    - Recursion
Mergesort implementation:
  tags: [mergesort, implementation]
  parents:
    - Mergesort
Heapsort:
  summary: Heapsort is a sorting algorithm that works by creating a min heap and repeatedly extracting the minimum value from it
  link: https://en.wikipedia.org/wiki/Heapsort
  depends:
    - Sorting
    - Min heap
Heapsort implementation:
  tags: [heapsort, implementation]
  summary: To implement heapsort, you need to implement a min heap with the heapify and extract-min operations, then use it to
  link: https://en.wikipedia.org/wiki/Heapsort#Pseudocode
  parents:
    - Heapsort
  depends:
    #- Heap implementation
    - Heapify implementation (binary heap)
    - Extract-min implementation (binary heap)
Heap implementation:
  tags: [heap, implementation]
  select_any:
    - Binary heap implementation
    - Fibonacci heap implementation
Binary heap complexity analysis:
  tags: [binary heap, complexity analysis]
  parents:
    - Binary heap
Fibonacci heap complexity analysis:
  tags: [fibonacci heap, complexity analysis]
  parents:
    - Fibonacci heap
Fibonacci heap implementation:
  tags: [fibonacci heap, complexity analysis]
  parents:
    - Fibonacci heap
Binary heap implementation:
  tags: [binary heap, implementation]
  link: https://en.wikipedia.org/wiki/Binary_heap#Heap_implementation
  module:
    - Find-min implementation (binary heap)
    - Insert implementation (binary heap)
    - Heapify implementation (binary heap)
    - Extract-min implementation (binary heap)
Insert implementation (binary heap):
  tags: [insert, implementation, binary heap]
  link: https://en.wikipedia.org/wiki/Binary_heap#Insert
  parents:
    - Binary heap
Heapify implementation (binary heap):
  tags: [heapify, implementation, binary heap]
  link: https://en.wikipedia.org/wiki/Binary_heap#Building_a_heap
  parents:
    - Binary heap
Extract-min implementation (binary heap):
  tags: [extract-min, implementation, binary heap]
  link: https://en.wikipedia.org/wiki/Binary_heap#Delete
  parents:
    - Min heap
    - Binary heap
Min heap:
  parents:
    - Heaps
Max heap:
  parents:
    - Heaps
Binary heap:
  parents:
    - Heaps
Dikstra's algorithm complexity analysis:
  tags: [dijkstra's algorithm, complexity analysis]
  depends:
    - Fibonacci heap complexity analysis
    - Hash table complexity analysis
Dijkstra's algorithm:
  tags: [dijkstra's algorithm]
  depends:
    - Heaps
    - Sets
    - Graphs
Dijkstra's algorithm implementation:
  tags: [dijkstra's algorithm, implementation]
  parents:
    - Dijkstra's algorithm
  depends:
    - Heap implementation
    - Hash table implementation
