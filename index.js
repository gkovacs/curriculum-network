// Generated by LiveScript 1.3.1
(function(){
  var root, relation_types, out$ = typeof exports != 'undefined' && exports || this;
  root = typeof exports != 'undefined' && exports !== null ? exports : this;
  out$.relation_types = relation_types = ['children', 'depends', 'suggests'];
  $(document).ready(function(){
    return $.get('graph.yaml', function(yamltxt){
      var data, nodes, topic_name, topic_info, i$, ref$, len$, relation, connected_nodes, j$, len1$, name, links, children, depends;
      data = jsyaml.safeLoad(yamltxt);
      nodes = {};
      for (topic_name in data) {
        topic_info = data[topic_name];
        if (nodes[topic_name] == null) {
          nodes[topic_name] = {
            name: topic_name
          };
        }
        for (i$ = 0, len$ = (ref$ = relation_types).length; i$ < len$; ++i$) {
          relation = ref$[i$];
          connected_nodes = topic_info[relation];
          if (connected_nodes != null) {
            for (j$ = 0, len1$ = connected_nodes.length; j$ < len1$; ++j$) {
              name = connected_nodes[j$];
              if (nodes[name] == null) {
                nodes[name] = {
                  name: name
                };
              }
            }
          }
        }
      }
      links = [];
      for (topic_name in data) {
        topic_info = data[topic_name];
        children = topic_info.children, depends = topic_info.depends;
        for (i$ = 0, len$ = (ref$ = relation_types).length; i$ < len$; ++i$) {
          relation = ref$[i$];
          connected_nodes = topic_info[relation];
          if (connected_nodes != null) {
            for (j$ = 0, len1$ = connected_nodes.length; j$ < len1$; ++j$) {
              name = connected_nodes[j$];
              links.push({
                source: nodes[topic_name],
                target: nodes[name],
                relation: relation
              });
            }
          }
        }
      }
      root.rawdata = data;
      root.nodes = nodes;
      root.links = links;
      return renderLinks(nodes, links);
    });
  });
}).call(this);
