// Generated by LiveScript 1.3.1
(function(){
  var unique, list_relation_recursive, list_parent_names, list_all_related_node_names_recursive, list_children_recursive, list_children_names_recursive, list_depends_recursive, list_depends_names_recursive, list_suggests_recursive, list_suggests_names_recursive, out$ = typeof exports != 'undefined' && exports || this;
  unique = require('prelude-ls').unique;
  out$.list_relation_recursive = list_relation_recursive = function(property, name){
    var output, i$, ref$, len$, child, j$, ref1$, len1$, descendant;
    output = [];
    if (rawdata[name] == null || rawdata[name][property] == null) {
      return output;
    }
    for (i$ = 0, len$ = (ref$ = rawdata[name][property]).length; i$ < len$; ++i$) {
      child = ref$[i$];
      output.push({
        child: child,
        source: name
      });
      for (j$ = 0, len1$ = (ref1$ = list_relation_recursive(property, child)).length; j$ < len1$; ++j$) {
        descendant = ref1$[j$];
        output.push(descendant);
      }
    }
    return output;
  };
  out$.list_parent_names = list_parent_names = function(name){
    var output, topic_name, ref$, topic_info, children;
    output = [];
    for (topic_name in ref$ = rawdata) {
      topic_info = ref$[topic_name];
      children = topic_info.children;
      if (children != null) {
        if (children.indexOf(name) !== -1) {
          output.push(topic_name);
        }
      }
    }
    return output;
  };
  out$.list_all_related_node_names_recursive = list_all_related_node_names_recursive = function(name){
    return unique(
    list_children_names_recursive(name).concat(list_depends_names_recursive(name), list_suggests_names_recursive(name)));
  };
  out$.list_children_recursive = list_children_recursive = function(name){
    return list_relation_recursive('children', name);
  };
  out$.list_children_names_recursive = list_children_names_recursive = function(name){
    return list_children_recursive(name).map(function(it){
      return it.child;
    });
  };
  out$.list_depends_recursive = list_depends_recursive = function(name){
    return list_relation_recursive('depends', name);
  };
  out$.list_depends_names_recursive = list_depends_names_recursive = function(name){
    return list_depends_recursive(name).map(function(it){
      return it.child;
    });
  };
  out$.list_suggests_recursive = list_suggests_recursive = function(name){
    return list_relation_recursive('suggests', name);
  };
  out$.list_suggests_names_recursive = list_suggests_names_recursive = function(name){
    return list_suggests_recursive(name).map(function(it){
      return it.child;
    });
  };
}).call(this);
